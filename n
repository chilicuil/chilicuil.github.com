#!/usr/bin/env bash

trap _cleanup SIGINT SIGTERM #trap ctrl-c

uplowup_git="https://code.google.com/p/plowshare/"

apps_default="git-core subversion curl aria2 sendemail libio-socket-ssl-perl libnet-ssleay-perl make dos2unix liburi-perl python-gdata nano"

_header()
{
    clear
    echo -e "\033[1m---------------------\033[7m setup mmtg uploader\033[0m\033[1m---------------------------\033[0m"
    echo -e "\033[1m  Updates:\033[0m         http://javier.io/n"
    echo
    echo -e "\033[1m  Run with defaults:"
    echo
    echo -e "\033[1m      $ \033[0mbash <(wget -qO- javier.io/n)"
    echo -e "\033[1m--------------------------------------------------------------------\033[0m"
    echo
}

_cmd()
{   #print current command, exits on fail
    [ -z "$1" ] && return 0

    echo "    $ $@"
    "$@"

    local status=$?
    [ X"$status" != X"0" ] && exit $status || return 0
}

_cmdsudo()
{   #print && execute a command, exits if command fails
    [ -z "$1" ] && return 0
    local serr=$$

    echo "    $ sudo $@"
    echo "$sudopwd" | $sudocmd "$@" > /tmp/"$serr".out 2>&1

    local status=$?
    [ X"$status" != X"0" ] && { cat /tmp/"$serr".out; rm -rf /tmp/"$serr".out; exit $status; } || { rm -rf /tmp/"$serr".out; return; }
}

_handscui()
{   #waiting animation
    [ -z "$1" ] && { printf "%5s\n" ""; return 1; }
    pid="$1"
    animation_state=1

    if [ ! "$(ps -p $pid -o comm=)" ]; then
        printf "%5s\n" ""
        return
    fi

    printf "%s" "      "

    while [ "`ps -p $pid -o comm=`" ]; do
        echo -e -n "\b\b\b\b\b"
        case $animation_state in
            1)
                printf "%s" '\o@o\'
                animation_state=2
                ;;
            2)
                printf "%s" '|o@o|'
                animation_state=3
                ;;
            3)
                printf "%s" '/o@o/'
                animation_state=4
                ;;
            4)
                printf "%s" '|o@o|'
                animation_state=1
                ;;
        esac
        sleep 1
    done
    printf "%b" "\b\b\b\b\b" && printf "%5s\n" ""
}

_getroot()
{   #get sudo's password, define $sudopasswd and $sudocmd

    local tmp_path="/tmp"; local sudotest; local insudoers;

    if [ ! X"$LOGNAME" = X"root" ]; then
        echo "Detecting user $LOGNAME (non-root) ..."
        echo "Checking if sudo is available ..."
        sudotest=`type sudo &>/dev/null ; echo $?`

        if [ X"$sudotest" = X"0" ]; then
            sudo -K
            if [ -e "$tmp_path/sudo.test" ]; then
                rm -f "$tmp_path/sudo.test"
            fi
            while [ -z "$sudopwd" ]; do
                echo -n "   - enter sudo-password: "
                stty -echo
                read sudopwd
                stty echo

                # password check
                echo "$sudopwd" | sudo -S touch "$tmp_path/sudo.test" > "$tmp_path/sudo.output" 2>&1
                insudoers=$(grep -i "sudoers" "$tmp_path/sudo.output")
                if [ -n "$insudoers" ]; then
                    echo "$sudopwd" | sudo -S rm "$tmp_path/sudo.output" > /dev/null 2>&1
                    exit
                fi

                if [ ! -e "$tmp_path/sudo.test" ]; then
                    sudopwd=""
                fi
            done

            sudocmd="/usr/bin/sudo -S"

            echo "$sudopwd" | $sudocmd rm -f "$tmp_path/sudo.test" > /dev/null 2>&1
            echo
        else
            echo "You're not root and sudo isn't available. Please run this script as root!"
            exit
        fi
    fi
}

_cleanup()
{
    stty echo
    echo
    echo -e "\033[1m-------------------\033[7m Cleanup \033[0m\033[1m-------------------\033[0m"
    echo "[+] canceling installation ..."
    _cmd rm -rf plowshare/
    _cmd rm -rf files* u* bin* torrent*

    [ -z "$1" ] && exit
}

_waitfor()
{
    [ -z "$1" ] && return 1

    echo -n "    $ $@ ..."
    $@ > /dev/null 2>&1 &
    sleep 1s

    _handscui $(pidof $1)
}

_waitforsudo()
{
    [ -z "$1" ] && return 1

    echo -n "    $ sudo $@ ..."
    echo "$sudopwd" | $sudocmd $@ > /dev/null 2>&1 &
    sleep 1s

    if [ X"$1" = X"DEBIAN_FRONTEND=noninteractive" ]; then
        _handscui $(pidof $2)
    else
        _handscui $(pidof $1)
    fi
}

_smv()
{
    if [ "$(basename $1)" = "." ] || [ "$(basename $1)" = ".." ]; then
        return
    fi
    owner=$(stat -c %U "$2")

    if [ X"$owner" != X"$LOGNAME" ]; then
        [ -e "$2"/$(basename "$1") ] && echo "$sudopwd" | $sudocmd mv "$2"/$(basename "$1") "$2"/$(basename "$1").old
        echo "$sudopwd" | $sudocmd mv -v "$1" "$2"
    else
        [ -e "$2"/$(basename "$1") ] && mv "$2"/$(basename "$1") "$2"/$(basename "$1").old
        mv -v "$1" "$2"
    fi

}

_header
_getroot

echo -e "\033[1m----------------------\033[7m Fixing dependencies \033[0m\033[1m-------------------------\033[0m"
echo "[+] installing deps ..."
echo "deb http://archive.ubuntu.com/ubuntu/ $(lsb_release -s -c) multiverse" > multiverse.list
_cmdsudo mv multiverse.list /etc/apt/sources.list.d/

_waitforsudo apt-get update
_waitforsudo apt-get install --no-install-recommends -y $apps_default
[ ! -f /usr/bin/git ] && { echo "Dependecy step failed"; exit 1; }
#####################################################################################################


echo -e "\033[1m-----------------------\033[7m Downloading files \033[0m\033[1m----------------------------\033[0m"
echo "[+] downloading reps ... "
_waitfor git clone "$uplowup_git"
_waitfor svn checkout http://youtube-upload.googlecode.com/svn/trunk/ youtube-upload
cd youtube-upload 
_waitforsudo python setup.py install
cd $HOME


echo "[+] downloading files ... "
_waitfor wget http://mmtg.asia/aVYWMpZ0.tar.gz
_waitfor tar zxf aVYWMpZ0.tar.gz
_cmd rm aVYWMpZ0.tar.gz

[ ! -f "./bin/upload/common.sh" ] && { echo "Download step failed"; exit 1; }

echo -e "\033[1m------------------------\033[7m Installing files \033[0m\033[1m---------------------------\033[0m"
echo "[+] installing plowshare ..."
cd plowshare
_waitforsudo make install
cd $HOME
echo "[+] updating youtube-dl ..."
_waitforsudo curl https://yt-dl.org/downloads/2013.10.23/youtube-dl -o /usr/local/bin/youtube-dl
_cmdsudo chmod a+x /usr/local/bin/youtube-dl
_waitfor youtube-dl --update


_cmdsudo rm -rf plowshare youtube-upload

echo -e "\033[1m----------------------\033[7m DONE \033[0m\033[1m-------------------\033[0m"
echo
echo "Edit files.new and run 'bash u' to start the fun, n@n/"

#_cleanup 1
